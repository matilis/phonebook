{"version":3,"file":"static/js/880.0e33b9d1.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\n//ten drugi contacts =>state.contacts.contacts; on wpada do  initialState w contactsSlice.\n//jezeli zmienie tu nazwe to tam tez musze np. =>state.contacts.items;\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    if (statusFilter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(statusFilter.filter)\n      );\n    }\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"form\":\"ContactForm_form__dhl+T\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return Notiflix.Notify.warning(`${contact.name} is alredy in contacts`, {\n        width: '500px',\n        position: 'center-top',\n        distance: '18px',\n        svgSize: '120px',\n        timeout: 3000,\n        borderRadius: '3px',\n        fontFamily: 'Dosis',\n        fontSize: '20px',\n      });\n    }\n\n    dispatch(addContact(contact));\n    Notiflix.Notify.success(`${contact.name} added`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n    event.target.reset();\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[A-Za-z.'\\- ]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.form__input}\n          placeholder=\"Contact name\"\n        />\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Contact number\"\n          className={css.form__input}\n        />\n        <button type=\"submit\" className={css.form__button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event =>\n    dispatch(filterContact(event.target.value));\n\n  return (\n    <div className={css.filter}>\n      <input\n        className={css.filter__input}\n        onChange={handleInputChange}\n        placeholder=\"Find contact by name\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"LoginForm_form__wrapper__wolm3\",\"form\":\"LoginForm_form__gPEx5\",\"form__label\":\"LoginForm_form__label__fqunJ\",\"form__input\":\"LoginForm_form__input__09r8K\",\"form__btn\":\"LoginForm_form__btn__jFr2r\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"RegisterForm_form__wrapper__XogRl\",\"form\":\"RegisterForm_form__Tv43W\",\"form__label\":\"RegisterForm_form__label__drWoo\",\"form__input\":\"RegisterForm_form__input__9aHOm\",\"form__btn\":\"RegisterForm_form__btn__TW+4G\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Username\n          <input\n            className={css.form__input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Nick\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { LoginForm } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Login = () => (\n  <div>\n    <Helmet>\n      <title>Login</title>\n    </Helmet>\n    <LoginForm />\n  </div>\n);\nexport default Login;\n"],"names":["selectContacts","state","contacts","createSelector","filters","statusFilter","filter","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","stateContactsNames","useSelector","map","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","target","elements","value","number","reset","Notiflix","concat","width","position","distance","svgSize","timeout","borderRadius","fontFamily","fontSize","addContact","type","pattern","title","required","placeholder","Filter","onChange","filterContact","LoginForm","form","currentTarget","logIn","email","password","RegisterForm","register","Helmet"],"sourceRoot":""}