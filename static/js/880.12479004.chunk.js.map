{"version":3,"file":"static/js/880.12479004.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.jsx","pages/Login/Login.jsx","redux/contacts/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"form\":\"ContactForm_form__dhl+T\",\"form__name\":\"ContactForm_form__name__0MHHc\",\"form__number\":\"ContactForm_form__number__uRpmt\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import Notiflix from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const stateContacts = useSelector(selectContacts);\n  const stateContactsNames = stateContacts.map(contact => contact.name);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.number.value,\n    };\n\n    if (stateContactsNames.includes(contact.name)) {\n      event.target.reset();\n      return Notiflix.Notify.warning(`${contact.name} is alredy in contacts`, {\n        width: '500px',\n        position: 'center-top',\n        distance: '18px',\n        svgSize: '120px',\n        timeout: 3000,\n        borderRadius: '3px',\n        fontFamily: 'Dosis',\n        fontSize: '20px',\n      });\n    }\n\n    dispatch(addContact(contact));\n    Notiflix.Notify.success(`${contact.name} added`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n    event.target.reset();\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.form__name}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[A-Za-z.'\\- ]+$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.form__input}\n            placeholder=\"Contact name\"\n          />\n        </label>\n\n        <label className={css.form__number}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"^\\+?\\d{1,4}?\\s?\\(?\\d{1,4}?\\)?\\s?\\d{1,4}\\s?\\d{1,4}\\s?\\d{1,9}$\"\n            title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Contact number\"\n            className={css.form__input}\n          />\n        </label>\n\n        <button type=\"submit\" className={css.form__button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactList_contacts__jDmyV\",\"contacts__item\":\"ContactList_contacts__item__9ozWV\",\"fade-in\":\"ContactList_fade-in__nGTVL\",\"contacts__name\":\"ContactList_contacts__name__ItpdU\",\"contacts__number\":\"ContactList_contacts__number__+j+yn\",\"contact__icon\":\"ContactList_contact__icon__PsMFg\",\"contacts__btn\":\"ContactList_contacts__btn__I3XUZ\",\"contacts__button\":\"ContactList_contacts__button__uwkrO\",\"contacts__wrapperName\":\"ContactList_contacts__wrapperName__+QL-w\",\"contacts__wrapperNumber\":\"ContactList_contacts__wrapperNumber__DjRso\",\"contacts__wrapperBtn\":\"ContactList_contacts__wrapperBtn__k0POK\"};","import React, { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact, editContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport editSvg from 'images/icon-pencil.png';\nimport deleteSvg from 'images/icon-garbage.png';\nimport saveSvg from 'images/icon-save.gif';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const [editingContactId, setEditingContactId] = useState(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedNumber, setEditedNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleEdit = (id, name, number) => {\n    setEditingContactId(id);\n    setEditedName(name);\n    setEditedNumber(number);\n  };\n\n  const handleSave = id => {\n    const editedContact = {\n      id: id,\n      name: editedName,\n      number: editedNumber,\n    };\n\n    dispatch(editContact(editedContact));\n\n    Notiflix.Notify.info(`${editedName} edited`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n\n    setEditingContactId(null);\n    setEditedName('');\n    setEditedNumber('');\n  };\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.failure(`Contact DELETED`, {\n      width: '500px',\n      position: 'center-top',\n      distance: '18px',\n      svgSize: '120px',\n      timeout: 3000,\n      borderRadius: '3px',\n      fontFamily: 'Dosis',\n      fontSize: '20px',\n    });\n  };\n\n  return (\n    <ul className={css.contacts}>\n      {contacts.map(contact => (\n        <li key={contact.id} className={css.contacts__item}>\n          {editingContactId === contact.id ? (\n            <>\n              <input\n                type=\"text\"\n                value={editedName}\n                className={css.contacts__wrapperName}\n                onChange={e => setEditedName(e.target.value)}\n              />\n              <input\n                type=\"text\"\n                value={editedNumber}\n                className={css.contacts__wrapperNumber}\n                onChange={e => setEditedNumber(e.target.value)}\n              />\n              <button\n                className={css.contacts__wrapperBtn}\n                type=\"button\"\n                onClick={() => handleSave(contact.id)}\n              >\n                <img\n                  className={css.contact__icon}\n                  src={saveSvg}\n                  alt=\"save icon\"\n                />\n              </button>\n            </>\n          ) : (\n            <>\n              <p className={css.contacts__name}>{contact.name}</p>\n              <p className={css.contacts__number}>{contact.number}</p>\n              <div className={css.contacts__btn}>\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    handleEdit(contact.id, contact.name, contact.number)\n                  }\n                  className={css.contacts__button}\n                >\n                  <img\n                    className={css.contact__icon}\n                    src={editSvg}\n                    alt=\"edit icon pencil\"\n                  />\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => handleDelete(contact.id)}\n                  className={css.contacts__button}\n                >\n                  <img\n                    className={css.contact__icon}\n                    src={deleteSvg}\n                    alt=\"delete icon garbage\"\n                  />\n                </button>\n              </div>\n            </>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filtersSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = event =>\n    dispatch(filterContact(event.target.value));\n\n  return (\n    <div className={css.filter}>\n      <input\n        className={css.filter__input}\n        onChange={handleInputChange}\n        placeholder=\"Find contact by name\"\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"LoginForm_form__wrapper__wolm3\",\"form\":\"LoginForm_form__gPEx5\",\"form__label\":\"LoginForm_form__label__fqunJ\",\"form__input\":\"LoginForm_form__input__09r8K\",\"form__btn\":\"LoginForm_form__btn__jFr2r\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form__wrapper\":\"RegisterForm_form__wrapper__XogRl\",\"form\":\"RegisterForm_form__Tv43W\",\"form__label\":\"RegisterForm_form__label__drWoo\",\"form__input\":\"RegisterForm_form__input__9aHOm\",\"form__btn\":\"RegisterForm_form__btn__TW+4G\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div className={css.form__wrapper}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.form__label}>\n          Username\n          <input\n            className={css.form__input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"John Nick\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Email\n          <input\n            className={css.form__input}\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"john.nick@gmail.com\"\n          />\n        </label>\n        <label className={css.form__label}>\n          Password\n          <input\n            className={css.form__input}\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"xxxxxxx\"\n          />\n        </label>\n        <button className={css.form__btn} type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader__box\":\"Spinner_loader__box__5C98c\",\"loader\":\"Spinner_loader__GQ3jW\",\"rotationBack\":\"Spinner_rotationBack__zZik1\",\"error__spinner\":\"Spinner_error__spinner__HkIN1\",\"animloader\":\"Spinner_animloader__N3ptr\",\"error__icon\":\"Spinner_error__icon__-HK0S\",\"pulse\":\"Spinner_pulse__z7KUv\"};","import css from './Spinner.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loader__box}>\n      <span className={css.loader}></span>\n    </div>\n  );\n};\n\nexport const Error = () => {\n  return (\n    <div className={css.loader__box}>\n      <p className={css.error__icon}></p>\n      <span className={css.error__spinner}>Data loading error</span>\n    </div>\n  );\n};\n","import { LoginForm } from 'components';\nimport { Helmet } from 'react-helmet';\n\nconst Login = () => (\n  <div>\n    <Helmet>\n      <title>Login</title>\n    </Helmet>\n    <LoginForm />\n  </div>\n);\nexport default Login;\n","import { createSelector } from '@reduxjs/toolkit';\n\n//ten drugi contacts =>state.contacts.contacts; on wpada do  initialState w contactsSlice.\n//jezeli zmienie tu nazwe to tam tez musze np. =>state.contacts.items;\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filters;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, statusFilter) => {\n    if (statusFilter === '') {\n      return contacts;\n    } else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(statusFilter.filter)\n      );\n    }\n  }\n);\n"],"names":["ContactForm","dispatch","useDispatch","stateContactsNames","useSelector","selectContacts","map","contact","name","_jsx","className","css","children","_jsxs","onSubmit","event","preventDefault","target","elements","value","number","includes","reset","Notiflix","concat","width","position","distance","svgSize","timeout","borderRadius","fontFamily","fontSize","addContact","type","pattern","title","required","placeholder","ContactList","contacts","selectVisibleContacts","_useState","useState","_useState2","_slicedToArray","editingContactId","setEditingContactId","_useState3","_useState4","editedName","setEditedName","_useState5","_useState6","editedNumber","setEditedNumber","id","_Fragment","onChange","e","onClick","editedContact","editContact","handleSave","src","saveSvg","alt","deleteContact","Filter","filterContact","LoginForm","form","currentTarget","logIn","email","password","RegisterForm","register","Loader","Error","Helmet","state","selectIsLoading","isLoading","selectError","error","createSelector","filters","statusFilter","filter","toLowerCase"],"sourceRoot":""}